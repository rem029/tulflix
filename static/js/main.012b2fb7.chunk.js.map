{"version":3,"sources":["assets/logo/tulflix_logo-full.png","services/useAxios.js","services/useYoutubeAPI.js","context/context.app.js","components/navbar.link.js","components/ui/spinner.js","components/navbar.js","utils/abbreviateNum.js","components/ui/header.js","components/video.player.js","components/ui/featured.js","components/playlist.items.js","helpers/ytAPI.js","components/playlist.js","components/ui/playlists.js","components/pages/home.page.js","assets/logo/tulflix_logo-icon.png","components/ui/backdrop.js","components/video.modal.js","App.js","reportWebVitals.js","index.js"],"names":["useAxios","method","url","useState","loading","setLoading","response","setResponse","error","setError","config","useEffect","axios","then","catch","finally","type","responseSchema","results","useYoutubeAPI","key","id","maxResults","urls","channel","playlists","playlist_item","videoInfo","channelActivity","channelVideos","setResult","data","items","DEFAULT_CONTEXT_APP","selectedVideo","navBar","activePlaylist","toggleNavBar","setSelectedVideo","setActivePage","loaded","channelActivities","playlistItems","addToPlaylistItems","createContext","NavBarLink","playlistId","href","text","navbarLinkStyle","isActive","Consumer","className","onClick","e","preventDefault","document","getElementById","scrollIntoView","scrollToView","Spinner","icon","faCircleNotch","NavBar","navBarStyle","navBarArrow","list","map","item","snippet","title","faCaretDown","faCaretUp","abbreviateNumber","value","newValue","suffixNum","toPrecision","Header","src","LogoFull","alt","statistics","subscriberCount","target","rel","faUserFriends","VideoPlayer","videoID","allowFullScreen","Featured","showVideo","length","Fragment","contentDetails","upload","videoId","thumbnails","high","customUrl","PlaylistItem","imgUrl","apiKEY","process","chId","ytAPI","GetChannelInfo","channelId","GetChannelActivity","GetChannelVideos","GetPlaylists","GetPlaylistItems","GetVideoInfo","loadPlaylistItems","ytApi","Playlist","playListItemsRef","useRef","contextApp","useContext","ContextApp","scrolled","setScrolled","setPlaylistItems","getPlaylistItems","window","addEventListener","onWindowResize","showScrollNext","current","scrollWidth","innerWidth","scrollTo","behavior","left","scrollLeft","prevPage","faChevronLeft","nextPage","faChevronRight","faAngleRight","ref","onScroll","onScrollPage","index","currentItem","medium","resourceId","Playlists","localized","Homepage","Backdrop","props","ReactDOM","createPortal","children","VideoModal","datePublished","Date","likeCount","viewCount","description","setData","video","result","maxres","publishedAt","abbreviateNum","faTimes","toDateString","faThumbsUp","faEye","TulflixIcon","LoadDataFromYtAPI","state","setState","App","setNavBar","selectedVideoId","setSelectedVideoId","setChannel","setChannelActivities","setPlaylists","getChannel","getPlaylists","getChannelActivities","Provider","vidId","prevState","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.012b2fb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tulflix_logo-full.49b0b67c.png\";","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxios = (method, url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const config = { method: method, url: url };\r\n\r\n  const fetchData = () => {\r\n    axios(config)\r\n      .then((response) => setResponse(response))\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { loading, response, error };\r\n};\r\n\r\nexport default useAxios;\r\n","import { useEffect, useState } from 'react';\r\nimport useAxios from '../services/useAxios';\r\n\r\nexport const type = {\r\n  channel: 'channel',\r\n  playlists: 'playlists',\r\n  playlist_item: 'playlist_item',\r\n  videoInfo: 'videoInfo',\r\n  channelActivity: 'channelActivity',\r\n  channelVideos: 'channelVideos',\r\n};\r\n\r\nexport const responseSchema = {\r\n  loading: true,\r\n  results: [],\r\n  error: null,\r\n};\r\n\r\nconst useYoutubeAPI = (type, key, id = '0', maxResults = 50, pageToken = '') => {\r\n  const urls = {\r\n    channel: `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&part=statistics&part=contentDetails&part=topicDetails&id=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlists: `https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlist_item: ` https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&part=id&part=contentDetails&part=status&playlistId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    videoInfo: `https://youtube.googleapis.com/youtube/v3/videos?id=${id}&part=snippet&part=statistics&maxResults=${maxResults}&key=${key}`,\r\n    channelActivity: `https://youtube.googleapis.com/youtube/v3/activities?part=contentDetails&part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    channelVideos: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&channelId=${id}&maxResults=${maxResults}&order=date&type=video&key=${key}`,\r\n  };\r\n\r\n  const [results, setResult] = useState(null);\r\n  const { loading, error, response } = useAxios('get', urls[type]);\r\n\r\n  useEffect(() => {\r\n    if (response || error) {\r\n      if (error) {\r\n        setResult([error]);\r\n      } else {\r\n        setResult(response.data.items);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  return { loading, error, results };\r\n};\r\n\r\nexport default useYoutubeAPI;\r\n","import { createContext } from 'react';\r\n\r\nimport { responseSchema } from '../services/useYoutubeAPI';\r\n\r\nexport const DEFAULT_CONTEXT_APP = {\r\n  selectedVideo: null,\r\n  navBar: false,\r\n  activePlaylist: '',\r\n  toggleNavBar: () => {},\r\n  setSelectedVideo: () => {},\r\n  setActivePage: () => {},\r\n  channel: { loaded: false, ...responseSchema },\r\n  channelActivities: { loaded: false, ...responseSchema },\r\n  playlists: { loaded: false, ...responseSchema },\r\n  playlistItems: [],\r\n  addToPlaylistItems: () => {},\r\n};\r\n\r\nexport default createContext(DEFAULT_CONTEXT_APP);\r\n","import '../styles/navbar.link.css';\r\n\r\nimport ContextApp from '../context/context.app';\r\n\r\nconst NavBarLink = ({ playlistId, href, text, isActive }) => {\r\n  const navbarLinkStyle = isActive ? 'navbar-link navbar-link-active' : 'navbar-link';\r\n  const scrollToView = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(`#${playlistId}`).scrollIntoView();\r\n  };\r\n  return (\r\n    <ContextApp.Consumer>\r\n      {({ toggleNavBar, setSelectedVideo }) => {\r\n        return (\r\n          <li className={navbarLinkStyle}>\r\n            <a\r\n              href={href}\r\n              onClick={(e) => {\r\n                scrollToView(e);\r\n                setSelectedVideo(null);\r\n                toggleNavBar();\r\n              }}\r\n            >\r\n              {text}\r\n            </a>\r\n          </li>\r\n        );\r\n      }}\r\n    </ContextApp.Consumer>\r\n  );\r\n};\r\n\r\nexport default NavBarLink;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../../styles/spinner.css\";\r\n\r\nconst Spinner = ({ className }) => {\r\n  return (\r\n    <div className={`spinner ${className}`}>\r\n      <FontAwesomeIcon icon={faCircleNotch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport NavBarLink from '../components/navbar.link';\r\n\r\nimport ContextApp from '../context/context.app.js';\r\n\r\nimport '../styles/navbar.css';\r\nimport Spinner from './ui/spinner';\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <ContextApp.Consumer>\r\n      {({ navBar, toggleNavBar, activePlaylist, setSelectedVideo, playlists }) => {\r\n        const navBarStyle = navBar ? 'navbar navbar-open' : 'navbar';\r\n        const navBarArrow = navBar ? 'container__navbar__arrow arrow-up' : 'container__navbar__arrow';\r\n\r\n        /* LOAD PLAYLIST */\r\n\r\n        const list = !playlists.loading ? (\r\n          playlists.results.map((item) => {\r\n            return (\r\n              <NavBarLink\r\n                key={item.id}\r\n                playlistId={item.id}\r\n                href=\"src\"\r\n                text={item.snippet.title}\r\n                isActive={item.id === activePlaylist}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner className=\"spinner-sm\" />\r\n        );\r\n\r\n        return (\r\n          <div className=\"container__navbar\">\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                toggleNavBar();\r\n                setSelectedVideo(null);\r\n              }}\r\n            >\r\n              Browse\r\n              <div className={navBarArrow}>\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n              </div>\r\n            </button>\r\n\r\n            <div className={navBarStyle}>\r\n              <em>\r\n                <FontAwesomeIcon icon={faCaretUp} />\r\n              </em>\r\n              <nav>\r\n                <ul>{list}</ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </ContextApp.Consumer>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","export default function abbreviateNumber(value) {\r\n  let newValue = value;\r\n  const suffixes = ['', 'K', 'M', 'B', 'T'];\r\n  let suffixNum = 0;\r\n  while (newValue >= 1000) {\r\n    newValue /= 1000;\r\n    suffixNum++;\r\n  }\r\n\r\n  newValue = newValue.toPrecision(3);\r\n\r\n  newValue += suffixes[suffixNum];\r\n  return newValue;\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport NavBar from '../navbar';\r\nimport Spinner from '../ui/spinner';\r\nimport ContextApp from '../../context/context.app';\r\nimport abbreviateNumber from '../../utils/abbreviateNum';\r\n\r\nimport '../../styles/header.css';\r\nimport '../../styles/logo.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"header__item_left\">\r\n        <img className=\"logo-full\" src={LogoFull} alt=\"tulflix_logo-full.png\" />\r\n        <NavBar />\r\n      </div>\r\n      <ContextApp.Consumer>\r\n        {({ channel }) => {\r\n          const statistics = !channel.loading ? (\r\n            <p>{abbreviateNumber(channel.results[0].statistics.subscriberCount)}</p>\r\n          ) : (\r\n            <Spinner className=\"spinner-sm\" />\r\n          );\r\n\r\n          return (\r\n            <div className=\"header__item_right\">\r\n              <a href=\"https://www.youtube.com/channel/UCxhygwqQ1ZMoBGQM2yEcNug\" target=\"_blank\" rel=\"noreferrer\">\r\n                <em>\r\n                  <FontAwesomeIcon icon={faUserFriends} />\r\n                </em>\r\n                {statistics}\r\n              </a>\r\n              <p>Subscribers</p>\r\n            </div>\r\n          );\r\n        }}\r\n      </ContextApp.Consumer>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"../styles/video.player.css\";\r\n\r\nconst VideoPlayer = ({ videoID, title }) => (\r\n  <div className=\"container\">\r\n    <iframe className=\"iframe-responsive\" src={`https://www.youtube.com/embed/${videoID}`} allowFullScreen title={title} />\r\n  </div>\r\n);\r\n\r\nexport default VideoPlayer;\r\n","import React from 'react';\r\n\r\nimport Spinner from '../ui/spinner';\r\n\r\nimport '../../styles/featured.css';\r\n\r\nimport ContextApp from '../../context/context.app';\r\nimport VideoPlayer from '../video.player';\r\n\r\nconst Featured = () => {\r\n  return (\r\n    <div className=\"container__featured\">\r\n      <ContextApp.Consumer>\r\n        {({ channel, channelActivities }) => {\r\n          const showVideo = !channelActivities.loading && channelActivities.results.length > 0;\r\n          return (\r\n            <React.Fragment>\r\n              {!channel.loading ? (\r\n                showVideo ? (\r\n                  <div className=\"container__featured__video\">\r\n                    <VideoPlayer\r\n                      videoID={channelActivities.results[0].contentDetails.upload.videoId}\r\n                      title={channelActivities.results[0].snippet.title}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"container__featured__image\">\r\n                    <img\r\n                      src={channel.results[0].snippet.thumbnails.high.url}\r\n                      alt={channel.results[0].snippet.customUrl}\r\n                    />\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <div className=\"container__featured__loading\">\r\n                  <Spinner className=\"spinner-lg\" />\r\n                </div>\r\n              )}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </ContextApp.Consumer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","import '../styles/playlistitem.css';\r\n\r\nimport ContextApp from '../context/context.app';\r\n\r\nconst PlaylistItem = ({ videoID, imgUrl }) => {\r\n  if (!videoID || !imgUrl) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ContextApp.Consumer>\r\n      {({ setSelectedVideo }) => {\r\n        return (\r\n          <div className=\"container__playlistitem\">\r\n            <img\r\n              src={imgUrl}\r\n              alt={videoID}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setSelectedVideo(videoID);\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      }}\r\n    </ContextApp.Consumer>\r\n  );\r\n};\r\n\r\nexport default PlaylistItem;\r\n","import useYoutubeAPI, { type } from '../services/useYoutubeAPI';\r\n\r\nconst apiKEY = process.env.REACT_APP_KEY;\r\nconst chId = 'UCxhygwqQ1ZMoBGQM2yEcNug'; //TULFO CHANNEL ID\r\n\r\nconst ytAPI = {\r\n  GetChannelInfo: (channelId = chId) => useYoutubeAPI(type.channel, apiKEY, channelId),\r\n\r\n  GetChannelActivity: (channelId = chId) => useYoutubeAPI(type.channelActivity, apiKEY, channelId),\r\n\r\n  GetChannelVideos: (channelId = chId) => useYoutubeAPI(type.channelVideos, apiKEY, channelId),\r\n\r\n  GetPlaylists: (channelId = chId) => useYoutubeAPI(type.playlists, apiKEY, channelId),\r\n\r\n  GetPlaylistItems: (playlistId) => useYoutubeAPI(type.playlist_item, apiKEY, playlistId),\r\n\r\n  GetVideoInfo: (videoId) => useYoutubeAPI(type.videoInfo, apiKEY, videoId),\r\n};\r\n\r\nexport default ytAPI;\r\n","import React, { useState, useRef, useEffect, useContext } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport PlaylistItem from './playlist.items';\r\n\r\nimport ytApi from '../helpers/ytAPI.js';\r\n\r\nimport '../styles/playlist.css';\r\nimport ContextApp from '../context/context.app';\r\n\r\nconst Playlist = ({ title, playlistId, items = [] }) => {\r\n  const playListItemsRef = useRef(null);\r\n  const contextApp = useContext(ContextApp);\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [playlistItems, setPlaylistItems] = useState(items);\r\n\r\n  const getPlaylistItems = loadPlaylistItems(playlistId, items);\r\n\r\n  useEffect(() => {\r\n    if (!getPlaylistItems.loading && playlistItems.length === 0) {\r\n      setPlaylistItems(getPlaylistItems.results);\r\n      // contextApp.addToPlaylistItems([...getPlaylistItems.results]);\r\n    }\r\n  }, [playlistItems, contextApp, items, getPlaylistItems]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onWindowResize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [playListItemsRef]);\r\n\r\n  const nextPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: window.innerWidth + playListItemsRef.current.scrollLeft,\r\n    });\r\n  };\r\n\r\n  const prevPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: playListItemsRef.current.scrollLeft - window.innerWidth,\r\n    });\r\n  };\r\n\r\n  const onScrollPage = (e) => {\r\n    setScrolled(e.target.scrollLeft > 0);\r\n  };\r\n\r\n  const onWindowResize = (e) => {\r\n    //\r\n    //\r\n    //\r\n    //\r\n  };\r\n\r\n  let showScrollNext = true;\r\n\r\n  try {\r\n    showScrollNext = playListItemsRef.current.scrollWidth > window.innerWidth;\r\n  } catch {\r\n    showScrollNext = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_playlist\">\r\n      {scrolled && (\r\n        <button onClick={(e) => prevPage(e)} className=\"container__playlist__control control-left\">\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n        </button>\r\n      )}\r\n\r\n      {showScrollNext && (\r\n        <button onClick={(e) => nextPage(e)} className=\"container__playlist__control control-right\">\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"container_playlist-title\">\r\n        <h2>{title}</h2>\r\n        <div className=\"container_playlist-title__sub-text\">Explore all</div>\r\n        <div className=\"container_playlist-title__sub-icon\">\r\n          <FontAwesomeIcon icon={faAngleRight} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container_playlist-items\"\r\n        id={`#${playlistId}`}\r\n        ref={playListItemsRef}\r\n        onScroll={(e) => {\r\n          onScrollPage(e);\r\n        }}\r\n      >\r\n        <React.Fragment>\r\n          {playlistItems.map((item, index) => {\r\n            let currentItem;\r\n\r\n            /* DONT RENDER PRIVATE AND DELETED VIDEO */\r\n            try {\r\n              currentItem =\r\n                items.length > 0 ? (\r\n                  <PlaylistItem\r\n                    key={item.contentDetails.upload.videoId + index}\r\n                    videoID={item.contentDetails.upload.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                ) : (\r\n                  <PlaylistItem\r\n                    key={item.snippet.resourceId.videoId + index}\r\n                    videoID={item.snippet.resourceId.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                );\r\n            } catch {\r\n              currentItem = null;\r\n            }\r\n\r\n            return currentItem;\r\n          })}\r\n        </React.Fragment>\r\n\r\n        <PlaylistItem />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst loadPlaylistItems = (playlistId, items) => {\r\n  if (items.length > 0) {\r\n    return { loading: false, results: items, error: null };\r\n  } else {\r\n    return ytApi.GetPlaylistItems(playlistId);\r\n  }\r\n};\r\n\r\nexport default Playlist;\r\n","import React from 'react';\r\n\r\nimport Playlist from '../playlist';\r\nimport Spinner from '../ui/spinner';\r\nimport ContextApp from '../../context/context.app';\r\n\r\nimport '../../styles/playlists.css';\r\n\r\nconst Playlists = () => {\r\n  return (\r\n    <ContextApp.Consumer>\r\n      {({ playlists, channelActivities }) => {\r\n        return (\r\n          <div className=\"container__playlists\">\r\n            {!channelActivities.loading ? (\r\n              <React.Fragment>\r\n                <Playlist title={'RECENT UPLOADS'} playlistId={0} items={channelActivities.results} />;\r\n              </React.Fragment>\r\n            ) : (\r\n              <div className=\"container__playlists_loading\">\r\n                <Spinner className=\"spinner-lg\" />\r\n              </div>\r\n            )}\r\n\r\n            {!playlists.loading ? (\r\n              <React.Fragment>\r\n                {playlists.results.map((item) => {\r\n                  return <Playlist key={item.id} title={item.snippet.localized.title} playlistId={item.id} />;\r\n                })}\r\n              </React.Fragment>\r\n            ) : (\r\n              <div className=\"container__playlists_loading\">\r\n                <Spinner className=\"spinner-lg\" />\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      }}\r\n    </ContextApp.Consumer>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","import React from 'react';\r\nimport Featured from '../ui/featured';\r\nimport Playlists from '../ui/playlists';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Featured />\r\n      <Playlists />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","export default __webpack_public_path__ + \"static/media/tulflix_logo-icon.93cc8c92.png\";","import ReactDOM from 'react-dom';\r\n\r\nimport '../../styles/backdrop.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"container__backdrop\">{props.children}</div>,\r\n    document.getElementById('root-video-info')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faThumbsUp, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport TulflixIcon from '../assets/logo/tulflix_logo-icon.png';\r\n\r\nimport ContextApp from '../context/context.app';\r\nimport abbreviateNum from '../utils/abbreviateNum';\r\n\r\nimport Backdrop from './ui/backdrop';\r\nimport Spinner from './ui/spinner';\r\nimport VideoPlayer from './video.player';\r\n\r\nimport '../styles/video.modal.css';\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst VideoModal = ({ videoId }) => {\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    title: '',\r\n    imgUrl: '',\r\n    datePublished: new Date(),\r\n    likeCount: '',\r\n    viewCount: '',\r\n    description: '',\r\n  });\r\n\r\n  const video = ytAPI.GetVideoInfo(videoId);\r\n\r\n  useEffect(() => {\r\n    if (!video.loading && video.result !== null && video.error === null && data.id === '') {\r\n      setData({\r\n        id: video.results[0].id,\r\n        title: video.results[0].snippet.title,\r\n        imgUrl: video.results[0].snippet.thumbnails.maxres.url,\r\n        datePublished: new Date(video.results[0].snippet.publishedAt),\r\n        likeCount: abbreviateNum(video.results[0].statistics.likeCount),\r\n        viewCount: abbreviateNum(video.results[0].statistics.viewCount),\r\n        description: video.results[0].snippet.description,\r\n      });\r\n    }\r\n  }, [video, data]);\r\n\r\n  return (\r\n    <ContextApp.Consumer>\r\n      {({ setSelectedVideo }) => {\r\n        return (\r\n          <Backdrop>\r\n            <div className=\"container__video-modal\">\r\n              <div className=\"container__video-modal__close-btn\">\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedVideo(null);\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </button>\r\n              </div>\r\n              <div className=\"container__video-modal__info\">\r\n                <div className=\"info-img\">\r\n                  <div className=\"info-img-overlay\">\r\n                    <VideoPlayer videoID={data.id} title={data.title} />\r\n                  </div>\r\n                  <img src={data.imgUrl} alt={data.title} />\r\n                </div>\r\n\r\n                {video.loading ? (\r\n                  <Spinner className={'spinner-lg'} />\r\n                ) : (\r\n                  <div className=\"info-text\">\r\n                    <div className=\"info-text-date\">\r\n                      <p>{data.datePublished.toDateString()}</p>\r\n\r\n                      <div className=\"info-text-statistics statistics-likes\">\r\n                        <p>\r\n                          <FontAwesomeIcon icon={faThumbsUp} />\r\n                        </p>\r\n                        <p>{data.likeCount}</p>\r\n                      </div>\r\n\r\n                      <div className=\"info-text-statistics statistics-views\">\r\n                        <p>\r\n                          <FontAwesomeIcon icon={faEye} />\r\n                        </p>\r\n                        <p>{data.viewCount}</p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"info-text-t-series\">\r\n                      <img src={TulflixIcon} alt={TulflixIcon} />\r\n                      <h2>SERIES</h2>\r\n                    </div>\r\n                    <h2>{data.title}</h2>\r\n\r\n                    <pre className=\"info-desc\">{data.description}</pre>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Backdrop>\r\n        );\r\n      }}\r\n    </ContextApp.Consumer>\r\n  );\r\n};\r\n\r\nexport default VideoModal;\r\n","import ReactDOM from 'react-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport './styles/app.css';\r\n\r\nimport Header from './components/ui/header';\r\nimport Homepage from './components/pages/home.page';\r\nimport VideoModal from './components/video.modal';\r\nimport ytAPI from './helpers/ytAPI';\r\n\r\nimport ContextApp, { DEFAULT_CONTEXT_APP } from './context/context.app';\r\n\r\nfunction App() {\r\n  const [navBar, setNavBar] = useState(false);\r\n  const [selectedVideoId, setSelectedVideoId] = useState(null);\r\n\r\n  const [channel, setChannel] = useState({ loaded: false, ...DEFAULT_CONTEXT_APP.channel });\r\n  const [channelActivities, setChannelActivities] = useState({\r\n    loaded: false,\r\n    ...DEFAULT_CONTEXT_APP.channelActivities,\r\n  });\r\n  const [playlists, setPlaylists] = useState({\r\n    loaded: false,\r\n    ...DEFAULT_CONTEXT_APP.playlists,\r\n  });\r\n  const [playlistItems, setPlaylistItems] = useState([]);\r\n\r\n  useEffect(() => {}, [channel, channelActivities, playlists]);\r\n\r\n  useEffect(() => {}, [playlistItems]);\r\n\r\n  const onAddPlaylistItem = (items) => setPlaylistItems((prevState) => [...prevState, ...items]);\r\n\r\n  const onToggleNavBar = () => setNavBar((state) => !state);\r\n\r\n  const onSelectVideo = (vidId) => setSelectedVideoId(vidId);\r\n\r\n  const updateChannel = (state) => setChannel(state);\r\n  const updateChannelActivities = (state) => setChannelActivities(state);\r\n  const updatePlaylists = (state) => setPlaylists(state);\r\n\r\n  const getChannel = ytAPI.GetChannelInfo();\r\n  const getPlaylists = ytAPI.GetPlaylists();\r\n  const getChannelActivities = ytAPI.GetChannelActivity();\r\n\r\n  LoadDataFromYtAPI(getChannel, channel, updateChannel);\r\n  LoadDataFromYtAPI(getChannelActivities, channelActivities, updateChannelActivities);\r\n  LoadDataFromYtAPI(getPlaylists, playlists, updatePlaylists);\r\n\r\n  const videoInfo =\r\n    selectedVideoId !== null &&\r\n    ReactDOM.createPortal(<VideoModal videoId={selectedVideoId} />, document.getElementById('root-video-info'));\r\n\r\n  return (\r\n    <ContextApp.Provider\r\n      value={{\r\n        ...DEFAULT_CONTEXT_APP,\r\n        selectedVideoId: selectedVideoId,\r\n        setSelectedVideo: onSelectVideo,\r\n        navBar: navBar,\r\n        toggleNavBar: onToggleNavBar,\r\n        channel: channel,\r\n        channelActivities: channelActivities,\r\n        playlists: playlists,\r\n        playlistItems: playlistItems,\r\n        addToPlaylistItems: onAddPlaylistItem,\r\n      }}\r\n    >\r\n      <div className=\"app\">\r\n        <Router basename={'/'}>\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route path=\"/\">\r\n              <Homepage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n\r\n      {videoInfo}\r\n    </ContextApp.Provider>\r\n  );\r\n}\r\n\r\nconst LoadDataFromYtAPI = (data, state, setState) => {\r\n  useEffect(() => {\r\n    if (!state.loaded) {\r\n      if ((!data.loading && data.results.length > 0) || data.error) {\r\n        setState({ loaded: true, loading: data.loading, results: data.results, error: data.error });\r\n      }\r\n    }\r\n  }, [data, state, setState]);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}