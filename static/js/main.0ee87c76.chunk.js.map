{"version":3,"sources":["assets/logo/tulflix_logo-full.png","components/pages/home.page.js","components/pages/notfound.page.js","components/ui/spinner.js","components/video.player.js","hooks/useAxios.js","hooks/useYoutubeAPI.js","helpers/ytAPI.js","hooks/useDataFromYtAPI.js","context/channelProvider.js","context/channelActivitiesProvider.js","components/ui/featured.js","components/playlist.items.js","components/playlist.js","context/playlistsProvider.js","components/ui/playlists.js","assets/logo/tulflix_logo-icon.png","utils/abbreviateNum.js","components/ui/backdrop.js","context/selectedVideoProvider.js","components/video.modal.js","context/navBarProvider.js","components/navbar.link.js","components/navbar.js","components/ui/header.js","components/pages/browse.page.js","components/ui/footer.js","App.js","reportWebVitals.js","context/appProvider.js","index.js"],"names":["HomePage","useState","imgLoaded","setImgLoaded","imgClass","className","src","LogoFull","alt","onLoad","to","NotFoundPage","Spinner","icon","faCircleNotch","VideoPlayer","videoID","title","allowAutoPlay","frameLoaded","setFrameLoaded","AutoPlay","e","allowFullScreen","allow","useAxios","method","url","loading","setLoading","response","setResponse","error","setError","config","useEffect","axios","then","catch","finally","type","responseSchema","results","useYoutubeAPI","key","id","maxResults","urls","channel","playlists","playlist_item","videoInfo","channelActivity","channelVideos","setResult","data","items","apiKEY","process","chId","ytAPI","GetChannelInfo","channelId","GetChannelActivity","GetChannelVideos","GetPlaylists","GetPlaylistItems","playlistId","GetVideoInfo","videoId","useDataFromYtAPI","state","setState","length","channelContext","createContext","setChannel","ChannelProvider","props","getChannel","Provider","value","children","channelActivitiesContext","channelActivities","setChannelActivities","ChannelActivitiesProvider","getChannelActivities","Featured","useContext","showVideo","Fragment","contentDetails","upload","snippet","thumbnails","high","customUrl","PlaylistItem","imgUrl","loadPlaylistItems","ytApi","Playlist","scrolled","setScrolled","playlistItems","setPlaylistItems","navButtons","setNavButtons","activeNav","setActiveNav","playListItemsRef","useRef","getPlaylistItems","window","addEventListener","onWindowResize","removeEventListener","current","updateNavButtons","Math","round","scrollWidth","innerWidth","index","arrayLength","newArray","showScrollNext","onClick","preventDefault","scrollTo","behavior","left","scrollLeft","prevPage","faChevronLeft","nextPage","faChevronRight","map","navId","console","log","goToPage","faAngleRight","ref","onScroll","target","onScrollPage","item","currentItem","medium","resourceId","playlistsContext","setPlaylists","manualPlaylists","PlaylistsProvider","getPlaylists","recentUploads","allVideos","Playlists","localized","abbreviateNumber","newValue","suffixNum","toFixed","Backdrop","ReactDOM","createPortal","document","getElementById","selectVideoContext","selectedVideoId","setSelectedVideoId","SelectedVideoProvider","VideoModal","datePublished","Date","likeCount","viewCount","description","setData","video","result","maxres","publishedAt","abbreviateNum","statistics","faTimes","toDateString","faThumbsUp","faEye","TulflixIcon","navBarContext","navBar","toggleNavBar","activePlaylist","setActivePlaylist","NavBarProvider","setNavBar","NavBarLink","href","text","isActive","navbarLinkStyle","scrollIntoView","scrollToView","NavBar","navBarStyle","navBarArrow","manualList","list","faCaretDown","faCaretUp","Header","subscriberCount","rel","faUserFriends","BrowsePage","Footer","faFacebook","faInstagram","faGithub","App","basename","path","component","match","params","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appContext","AppProvider","render","StrictMode"],"mappings":"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","file":"static/js/main.0ee87c76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tulflix_logo-full.49b0b67c.png\";","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport '../../styles/home.page.css';\r\n\r\nconst HomePage = () => {\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n\r\n  const onImgLoad = () => setImgLoaded(true);\r\n\r\n  const imgClass = imgLoaded ? 'container__homepage-img img-show' : 'container__homepage-img';\r\n  return (\r\n    <div className=\"container__homepage\">\r\n      <img\r\n        className={imgClass}\r\n        src={LogoFull}\r\n        alt={LogoFull}\r\n        onLoad={() => {\r\n          onImgLoad();\r\n        }}\r\n      />\r\n      <p className=\"container__homepage-sub-text\">Watch Tulfo and chill</p>\r\n      <Link className=\"container__homepage-btn\" to=\"/browse/\">\r\n        Start Watching\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react/cjs/react.development';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport '../../styles/notFound.page.css';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"container__notfound\">\r\n      <img className=\"container__notfound-img\" src={LogoFull} alt={LogoFull} />\r\n      <p className=\"container__notfound-sub-text\">Page Not Found</p>\r\n      <Link className=\"container__notfound-btn\" to=\"/browse/\">\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../../styles/spinner.css\";\r\n\r\nconst Spinner = ({ className }) => {\r\n  return (\r\n    <div className={`spinner ${className}`}>\r\n      <FontAwesomeIcon icon={faCircleNotch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useState } from 'react';\r\nimport '../styles/video.player.css';\r\n\r\nimport Spinner from './ui/spinner';\r\n\r\nconst VideoPlayer = ({ videoID, title, allowAutoPlay = false }) => {\r\n  const [frameLoaded, setFrameLoaded] = useState(false);\r\n\r\n  const onFrameLoad = (e) => {\r\n    setFrameLoaded(true);\r\n  };\r\n\r\n  const AutoPlay = allowAutoPlay ? '?autoplay=1&mute=1' : '';\r\n\r\n  return (\r\n    <div className=\"container__videoplayer\">\r\n      <iframe\r\n        onLoad={(e) => {\r\n          // console.log(e);\r\n          onFrameLoad(e);\r\n        }}\r\n        className=\"iframe-responsive\"\r\n        src={`https://www.youtube.com/embed/${videoID}${AutoPlay}`}\r\n        allowFullScreen\r\n        title={title}\r\n        allow=\"autoplay\"\r\n      />\r\n      <div className=\"container__loading\">{!frameLoaded && <Spinner className=\"spinner-lg\" />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxios = (method, url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const config = { method: method, url: url };\r\n\r\n  const fetchData = () => {\r\n    axios(config)\r\n      .then((response) => setResponse(response))\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { loading, response, error };\r\n};\r\n\r\nexport default useAxios;\r\n","import { useEffect, useState } from \"react\";\r\nimport useAxios from \"./useAxios\";\r\n\r\nexport const type = {\r\n  channel: \"channel\",\r\n  playlists: \"playlists\",\r\n  playlist_item: \"playlist_item\",\r\n  videoInfo: \"videoInfo\",\r\n  channelActivity: \"channelActivity\",\r\n  channelVideos: \"channelVideos\",\r\n};\r\n\r\nexport const responseSchema = {\r\n  loading: true,\r\n  results: [],\r\n  error: null,\r\n};\r\n\r\nconst useYoutubeAPI = (\r\n  type,\r\n  key,\r\n  id = \"0\",\r\n  maxResults = 50,\r\n  pageToken = \"\"\r\n) => {\r\n  const urls = {\r\n    channel: `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&part=statistics&part=contentDetails&part=topicDetails&id=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlists: `https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlist_item: ` https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&part=id&part=contentDetails&part=status&playlistId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    videoInfo: `https://youtube.googleapis.com/youtube/v3/videos?id=${id}&part=snippet&part=statistics&maxResults=${maxResults}&key=${key}`,\r\n    channelActivity: `https://youtube.googleapis.com/youtube/v3/activities?part=contentDetails&part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    channelVideos: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&channelId=${id}&maxResults=${maxResults}&order=date&type=video&key=${key}`,\r\n  };\r\n\r\n  const [results, setResult] = useState([]);\r\n  const { loading, error, response } = useAxios(\"get\", urls[type]);\r\n\r\n  useEffect(() => {\r\n    if (response || error) {\r\n      if (error) {\r\n        setResult(error);\r\n      } else {\r\n        setResult(response.data.items);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  return { loading, error, results };\r\n};\r\n\r\nexport default useYoutubeAPI;\r\n","import useYoutubeAPI, { type } from \"../hooks/useYoutubeAPI\";\r\n\r\nconst apiKEY = process.env.REACT_APP_KEY;\r\nconst chId = \"UCxhygwqQ1ZMoBGQM2yEcNug\"; //TULFO CHANNEL ID\r\n\r\nconst ytAPI = {\r\n  GetChannelInfo: (channelId = chId) =>\r\n    useYoutubeAPI(type.channel, apiKEY, channelId),\r\n\r\n  GetChannelActivity: (channelId = chId) =>\r\n    useYoutubeAPI(type.channelActivity, apiKEY, channelId),\r\n\r\n  GetChannelVideos: (channelId = chId) =>\r\n    useYoutubeAPI(type.channelVideos, apiKEY, channelId),\r\n\r\n  GetPlaylists: (channelId = chId) =>\r\n    useYoutubeAPI(type.playlists, apiKEY, channelId),\r\n\r\n  GetPlaylistItems: (playlistId) =>\r\n    useYoutubeAPI(type.playlist_item, apiKEY, playlistId),\r\n\r\n  GetVideoInfo: (videoId) => useYoutubeAPI(type.videoInfo, apiKEY, videoId),\r\n};\r\n\r\nexport default ytAPI;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { responseSchema } from \"./useYoutubeAPI\";\r\n\r\nconst useDataFromYtAPI = (data, state, setState) => {\r\n  useEffect(() => {\r\n    const loaded = state.results.length === 0 && state.loading;\r\n    if (loaded) {\r\n      if ((!data.loading && data.results.length > 0) || data.error) {\r\n        let response = responseSchema;\r\n        response = { ...data };\r\n        setState(response);\r\n      }\r\n    }\r\n  }, [data, state, setState]);\r\n};\r\n\r\nexport default useDataFromYtAPI;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const channelContext = createContext({\r\n  channel: responseSchema,\r\n  setChannel: () => {},\r\n});\r\n\r\nconst ChannelProvider = (props) => {\r\n  const [channel, setChannel] = useState(responseSchema);\r\n\r\n  const getChannel = ytAPI.GetChannelInfo();\r\n  const updateChannel = (state) => setChannel(state);\r\n  useDataFromYtAPI(getChannel, channel, updateChannel);\r\n\r\n  return (\r\n    <channelContext.Provider\r\n      value={{\r\n        channel: channel,\r\n        setChannel: setChannel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </channelContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChannelProvider;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const channelActivitiesContext = createContext({\r\n  channelActivities: responseSchema,\r\n  setChannelActivities: () => {},\r\n});\r\n\r\nconst ChannelActivitiesProvider = (props) => {\r\n  const [channelActivities, setChannelActivities] = useState(responseSchema);\r\n\r\n  const getChannelActivities = ytAPI.GetChannelActivity();\r\n  const updateChannelActivities = (state) => setChannelActivities(state);\r\n  useDataFromYtAPI(getChannelActivities, channelActivities, updateChannelActivities);\r\n  return (\r\n    <channelActivitiesContext.Provider\r\n      value={{\r\n        channelActivities: channelActivities,\r\n        setChannelActivities: setChannelActivities,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </channelActivitiesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChannelActivitiesProvider;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Spinner from '../ui/spinner';\r\n\r\nimport '../../styles/featured.css';\r\n\r\nimport VideoPlayer from '../video.player';\r\n\r\nimport { channelContext } from '../../context/channelProvider';\r\nimport { channelActivitiesContext } from '../../context/channelActivitiesProvider';\r\n\r\nconst Featured = () => {\r\n  const { channel } = useContext(channelContext);\r\n  const { channelActivities } = useContext(channelActivitiesContext);\r\n\r\n  const showVideo = !channelActivities.loading && channelActivities.results.length > 0;\r\n\r\n  return (\r\n    <div className=\"container__featured\">\r\n      <React.Fragment>\r\n        {!channel.loading ? (\r\n          showVideo ? (\r\n            <div className=\"container__featured__video\">\r\n              <VideoPlayer\r\n                videoID={channelActivities.results[0].contentDetails.upload.videoId}\r\n                title={channelActivities.results[0].snippet.title}\r\n                allowAutoPlay={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"container__featured__image\">\r\n              <img src={channel.results[0].snippet.thumbnails.high.url} alt={channel.results[0].snippet.customUrl} />\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"container__featured__loading\">\r\n            <Spinner className=\"spinner-lg\" />\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/playlistitem.css';\r\n\r\nconst PlaylistItem = ({ videoID, imgUrl }) => {\r\n  if (!videoID || !imgUrl) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container__playlistitem\">\r\n      <Link to={`/browse/${videoID}`}>\r\n        <img src={imgUrl} alt={videoID} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistItem;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport PlaylistItem from './playlist.items';\r\n\r\nimport ytApi from '../helpers/ytAPI.js';\r\n\r\nimport '../styles/playlist.css';\r\n\r\nconst Playlist = ({ title, playlistId, items = [] }) => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [playlistItems, setPlaylistItems] = useState(items);\r\n  const [navButtons, setNavButtons] = useState([]);\r\n  const [activeNav, setActiveNav] = useState(-1);\r\n\r\n  const playListItemsRef = useRef(null);\r\n  const getPlaylistItems = loadPlaylistItems(playlistId, items);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onWindowResize);\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (playListItemsRef) {\r\n      onWindowResize();\r\n    }\r\n  }, [playListItemsRef]);\r\n\r\n  useEffect(() => {}, [navButtons]);\r\n\r\n  useEffect(() => {\r\n    if (!getPlaylistItems.loading && playlistItems.length === 0) {\r\n      setPlaylistItems(getPlaylistItems.results);\r\n      // contextApp.addToPlaylistItems([...getPlaylistItems.results]);\r\n    }\r\n  }, [playlistItems, items, getPlaylistItems]);\r\n\r\n  const nextPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: window.innerWidth + playListItemsRef.current.scrollLeft,\r\n    });\r\n  };\r\n\r\n  const prevPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: playListItemsRef.current.scrollLeft - window.innerWidth,\r\n    });\r\n  };\r\n\r\n  const goToPage = (e, index) => {\r\n    e.preventDefault();\r\n    setActiveNav(index);\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: window.innerWidth * index,\r\n    });\r\n\r\n    console.log('SCROLL TO', window.innerWidth * index);\r\n    console.log('SCROLL WIDTH', playListItemsRef.current.scrollWidth);\r\n  };\r\n\r\n  const onScrollPage = (e) => setScrolled(e.target.scrollLeft > 0);\r\n\r\n  const onWindowResize = () => {\r\n    if (playListItemsRef) {\r\n      if (playListItemsRef.current) {\r\n        updateNavButtons(Math.round(playListItemsRef.current.scrollWidth / window.innerWidth));\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateNavButtons = (arrayLength = 0) => {\r\n    if (arrayLength === 1) {\r\n      arrayLength = 0;\r\n    }\r\n    let index;\r\n    let newArray = [arrayLength - 1];\r\n    if (arrayLength > 0) {\r\n      for (index = 0; index <= arrayLength; index++) {\r\n        const id = index;\r\n        newArray[index] = id;\r\n      }\r\n      setNavButtons(newArray);\r\n    }\r\n  };\r\n\r\n  let showScrollNext = true;\r\n\r\n  try {\r\n    showScrollNext = playListItemsRef.current.scrollWidth > window.innerWidth;\r\n  } catch {\r\n    showScrollNext = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_playlist\">\r\n      {scrolled && (\r\n        <button onClick={(e) => prevPage(e)} className=\"container__playlist__control control-left\">\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n        </button>\r\n      )}\r\n\r\n      {showScrollNext && (\r\n        <button onClick={(e) => nextPage(e)} className=\"container__playlist__control control-right\">\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n        </button>\r\n      )}\r\n\r\n      {\r\n        <div className=\"container__playlist-nav-buttons\">\r\n          {navButtons.length > 0 &&\r\n            navButtons.map((navId) => {\r\n              return (\r\n                <button\r\n                  key={navId}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    goToPage(e, navId);\r\n                  }}\r\n                  className={activeNav === navId ? 'container__playlist-nav-buttons-active' : ''}\r\n                ></button>\r\n              );\r\n            })}\r\n        </div>\r\n      }\r\n\r\n      <div className=\"container_playlist-title\">\r\n        <h2>{title}</h2>\r\n        <div className=\"container_playlist-title__sub-text\">Explore all</div>\r\n        <div className=\"container_playlist-title__sub-icon\">\r\n          <FontAwesomeIcon icon={faAngleRight} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={'container_playlist-items ' + (!playListItemsRef && ' playlist-loading')}\r\n        id={`#${playlistId}`}\r\n        ref={playListItemsRef}\r\n        onScroll={(e) => {\r\n          onScrollPage(e);\r\n        }}\r\n      >\r\n        <React.Fragment>\r\n          {playlistItems.map((item, index) => {\r\n            let currentItem;\r\n\r\n            /* DONT RENDER PRIVATE AND DELETED VIDEO */\r\n            try {\r\n              currentItem =\r\n                items.length > 0 ? (\r\n                  <PlaylistItem\r\n                    key={item.contentDetails.upload.videoId + index}\r\n                    videoID={item.contentDetails.upload.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                ) : (\r\n                  <PlaylistItem\r\n                    key={item.snippet.resourceId.videoId + index}\r\n                    videoID={item.snippet.resourceId.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                );\r\n            } catch {\r\n              currentItem = null;\r\n            }\r\n\r\n            return currentItem;\r\n          })}\r\n        </React.Fragment>\r\n\r\n        <PlaylistItem />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst loadPlaylistItems = (playlistId, items) => {\r\n  if (items.length > 0) {\r\n    return { loading: false, results: items, error: null };\r\n  } else {\r\n    return ytApi.GetPlaylistItems(playlistId);\r\n  }\r\n};\r\n\r\nexport default Playlist;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const playlistsContext = createContext({\r\n  playlists: responseSchema,\r\n  setPlaylists: () => {},\r\n  manualPlaylists: {},\r\n});\r\n\r\nconst PlaylistsProvider = (props) => {\r\n  const [playlists, setPlaylists] = useState(responseSchema);\r\n\r\n  const getPlaylists = ytAPI.GetPlaylists();\r\n  const updatePlaylists = (state) => setPlaylists(state);\r\n  useDataFromYtAPI(getPlaylists, playlists, updatePlaylists);\r\n\r\n  return (\r\n    <playlistsContext.Provider\r\n      value={{\r\n        playlists: playlists,\r\n        setPlaylists: setPlaylists,\r\n        manualPlaylists: {\r\n          recentUploads: {\r\n            id: 'recentUploads01',\r\n            title: 'RECENT UPLOADS',\r\n          },\r\n          allVideos: {\r\n            id: 'allVideos02',\r\n            title: 'ALL VIDEOS',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {props.children}\r\n    </playlistsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlaylistsProvider;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Playlist from \"../playlist\";\r\nimport Spinner from \"../ui/spinner\";\r\n\r\nimport { playlistsContext } from \"../../context/playlistsProvider\";\r\nimport { channelActivitiesContext } from \"../../context/channelActivitiesProvider\";\r\n\r\nimport \"../../styles/playlists.css\";\r\n\r\nconst Playlists = () => {\r\n  const { playlists, manualPlaylists } = useContext(playlistsContext);\r\n  const { channelActivities } = useContext(channelActivitiesContext);\r\n\r\n  return (\r\n    <div className=\"container__playlists\">\r\n      {!channelActivities.loading && channelActivities.results.length > 0 ? (\r\n        <React.Fragment>\r\n          <Playlist\r\n            title={manualPlaylists.recentUploads.title}\r\n            playlistId={manualPlaylists.recentUploads.id}\r\n            items={channelActivities.results}\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className=\"container__playlists_loading\">\r\n          <Spinner className=\"spinner-lg\" />\r\n        </div>\r\n      )}\r\n\r\n      {!playlists.loading && playlists.results.length > 0 ? (\r\n        <React.Fragment>\r\n          {playlists.results.map((item) => {\r\n            return (\r\n              <Playlist\r\n                key={item.id}\r\n                title={item.snippet.localized.title}\r\n                playlistId={item.id}\r\n              />\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className=\"container__playlists_loading\">\r\n          <Spinner className=\"spinner-lg\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","export default __webpack_public_path__ + \"static/media/tulflix_logo-icon.93cc8c92.png\";","export default function abbreviateNumber(value) {\r\n  let newValue = value;\r\n  try {\r\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\r\n    let suffixNum = 0;\r\n    while (newValue >= 1000) {\r\n      newValue /= 1000;\r\n      suffixNum++;\r\n    }\r\n\r\n    if (suffixNum > 0) {\r\n      newValue = newValue.toFixed(1);\r\n    }\r\n\r\n    newValue += suffixes[suffixNum];\r\n    return newValue;\r\n  } catch {\r\n    console.log(\"error\", newValue);\r\n    return value;\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport '../../styles/backdrop.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        props.onClick();\r\n      }}\r\n      className=\"container__backdrop\"\r\n    >\r\n      {props.children}\r\n    </div>,\r\n    document.getElementById('root-video-info')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const selectVideoContext = createContext({\r\n  selectedVideoId: null,\r\n  setSelectedVideoId: () => {},\r\n});\r\n\r\nconst SelectedVideoProvider = (props) => {\r\n  const [selectedVideoId, setSelectedVideoId] = useState(null);\r\n\r\n  return (\r\n    <selectVideoContext.Provider\r\n      value={{\r\n        selectedVideoId: selectedVideoId,\r\n        setSelectedVideoId: setSelectedVideoId,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </selectVideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SelectedVideoProvider;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faThumbsUp, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TulflixIcon from '../assets/logo/tulflix_logo-icon.png';\r\n\r\nimport abbreviateNum from '../utils/abbreviateNum';\r\n\r\nimport Backdrop from './ui/backdrop';\r\nimport Spinner from './ui/spinner';\r\nimport VideoPlayer from './video.player';\r\n\r\nimport '../styles/video.modal.css';\r\nimport ytAPI from '../helpers/ytAPI';\r\n\r\nimport { selectVideoContext } from '../context/selectedVideoProvider';\r\n\r\nconst VideoModal = ({ videoId }) => {\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    title: '',\r\n    imgUrl: '',\r\n    datePublished: new Date(),\r\n    likeCount: '',\r\n    viewCount: '',\r\n    description: '',\r\n  });\r\n\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const video = ytAPI.GetVideoInfo(videoId);\r\n\r\n  useEffect(() => {\r\n    setSelectedVideoId(videoId);\r\n    return () => {\r\n      setSelectedVideoId(null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!video.loading && video.result !== null && video.error === null && data.id === '') {\r\n      setData({\r\n        id: video.results[0].id,\r\n        title: video.results[0].snippet.title,\r\n        imgUrl: video.results[0].snippet.thumbnails.maxres.url,\r\n        datePublished: new Date(video.results[0].snippet.publishedAt),\r\n        likeCount: abbreviateNum(video.results[0].statistics.likeCount),\r\n        viewCount: abbreviateNum(video.results[0].statistics.viewCount),\r\n        description: video.results[0].snippet.description,\r\n      });\r\n    }\r\n  }, [video, data]);\r\n\r\n  return (\r\n    <Backdrop onClick={() => {}}>\r\n      <div className=\"container__video-modal\">\r\n        <div className=\"container__video-modal__close-btn\">\r\n          <Link to=\"/browse\">\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"container__video-modal__info\">\r\n          <div className=\"info-img\">\r\n            <div className=\"info-img-overlay\">\r\n              <VideoPlayer videoID={data.id} title={data.title} />\r\n            </div>\r\n            <img src={data.imgUrl} alt={data.title} />\r\n          </div>\r\n\r\n          {video.loading ? (\r\n            <Spinner className={'spinner-lg'} />\r\n          ) : (\r\n            <div className=\"info-text\">\r\n              <div className=\"info-text-date\">\r\n                <p>{data.datePublished.toDateString()}</p>\r\n\r\n                <div className=\"info-text-statistics statistics-likes\">\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                  </p>\r\n                  <p>{data.likeCount}</p>\r\n                </div>\r\n\r\n                <div className=\"info-text-statistics statistics-views\">\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  </p>\r\n                  <p>{data.viewCount}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"info-text-t-series\">\r\n                <img src={TulflixIcon} alt={TulflixIcon} />\r\n                <h2>SERIES</h2>\r\n              </div>\r\n              <h2>{data.title}</h2>\r\n\r\n              <hr className=\"line__grey\" />\r\n              <hr className=\"line__red\" />\r\n\r\n              <pre className=\"info-desc\">{data.description}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default VideoModal;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const navBarContext = createContext({\r\n  navBar: false,\r\n  toggleNavBar: () => {},\r\n  activePlaylist: null,\r\n  setActivePlaylist: () => {},\r\n});\r\n\r\nconst NavBarProvider = (props) => {\r\n  const [navBar, setNavBar] = useState(false);\r\n  const [activePlaylist, setActivePlaylist] = useState(null);\r\n\r\n  const toggleNavBar = () => setNavBar((state) => !state);\r\n\r\n  return (\r\n    <navBarContext.Provider\r\n      value={{\r\n        navBar: navBar,\r\n        toggleNavBar: toggleNavBar,\r\n        activePlaylist: activePlaylist,\r\n        setActivePlaylist: setActivePlaylist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </navBarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NavBarProvider;\r\n","import { useContext } from \"react\";\r\nimport \"../styles/navbar.link.css\";\r\n\r\nimport { navBarContext } from \"../context/navBarProvider\";\r\nimport { selectVideoContext } from \"../context/selectedVideoProvider\";\r\n\r\nconst NavBarLink = ({ playlistId, href, text, isActive }) => {\r\n  const { toggleNavBar } = useContext(navBarContext);\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const navbarLinkStyle = isActive\r\n    ? \"navbar-link navbar-link-active\"\r\n    : \"navbar-link\";\r\n  const scrollToView = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(`#${playlistId}`).scrollIntoView();\r\n  };\r\n  return (\r\n    <li className={navbarLinkStyle}>\r\n      <a\r\n        href={href}\r\n        onClick={(e) => {\r\n          scrollToView(e);\r\n          setSelectedVideoId(null);\r\n          toggleNavBar();\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavBarLink;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport NavBarLink from \"../components/navbar.link\";\r\n\r\nimport { navBarContext } from \"../context/navBarProvider\";\r\nimport { playlistsContext } from \"../context/playlistsProvider\";\r\nimport { selectVideoContext } from \"../context/selectedVideoProvider\";\r\n\r\nimport \"../styles/navbar.css\";\r\nimport Spinner from \"./ui/spinner\";\r\n\r\nconst NavBar = () => {\r\n  const { navBar, toggleNavBar, activePlaylist } = useContext(navBarContext);\r\n  const { playlists, manualPlaylists } = useContext(playlistsContext);\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const navBarStyle = navBar ? \"navbar navbar-open\" : \"navbar\";\r\n  const navBarArrow = navBar\r\n    ? \"container__navbar__arrow arrow-up\"\r\n    : \"container__navbar__arrow\";\r\n\r\n  /* LOAD PLAYLIST */\r\n  /* MANUAL PLAYLIST */\r\n  const manualList = [\r\n    <NavBarLink\r\n      key={manualPlaylists.recentUploads.id + \"navbar\"}\r\n      playlistId={manualPlaylists.recentUploads.id}\r\n      href=\"src\"\r\n      text={manualPlaylists.recentUploads.title}\r\n      isActive={manualPlaylists.recentUploads.id === activePlaylist}\r\n    />,\r\n  ];\r\n\r\n  /* LOAD PLAYLIST */\r\n  /* YOUTUBE PLAYLIST */\r\n  const list = !playlists.loading ? (\r\n    playlists.results.map((item) => {\r\n      return (\r\n        <NavBarLink\r\n          key={item.id}\r\n          playlistId={item.id}\r\n          href=\"src\"\r\n          text={item.snippet.title}\r\n          isActive={item.id === activePlaylist}\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    <Spinner className=\"spinner-sm\" />\r\n  );\r\n\r\n  return (\r\n    <div className=\"container__navbar\">\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          toggleNavBar();\r\n          setSelectedVideoId(null);\r\n        }}\r\n      >\r\n        Browse\r\n        <div className={navBarArrow}>\r\n          <FontAwesomeIcon icon={faCaretDown} />\r\n        </div>\r\n      </button>\r\n\r\n      <div className={navBarStyle}>\r\n        <em>\r\n          <FontAwesomeIcon icon={faCaretUp} />\r\n        </em>\r\n        <nav>\r\n          <ul>\r\n            {manualList}\r\n            {list}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport NavBar from '../navbar';\r\nimport Spinner from '../ui/spinner';\r\nimport abbreviateNumber from '../../utils/abbreviateNum';\r\n\r\nimport { channelContext } from '../../context/channelProvider';\r\n\r\nimport '../../styles/header.css';\r\nimport '../../styles/logo.css';\r\n\r\nconst Header = () => {\r\n  const { channel } = useContext(channelContext);\r\n\r\n  const statistics = !channel.loading ? (\r\n    <p>{abbreviateNumber(channel.results[0].statistics.subscriberCount)}</p>\r\n  ) : (\r\n    <Spinner className=\"spinner-sm\" />\r\n  );\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header__item_left\">\r\n        <img className=\"logo-full\" src={LogoFull} alt=\"tulflix_logo-full.png\" />\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"header__item_right\">\r\n        <a href=\"https://www.youtube.com/channel/UCxhygwqQ1ZMoBGQM2yEcNug\" target=\"_blank\" rel=\"noreferrer\">\r\n          <em>\r\n            <FontAwesomeIcon icon={faUserFriends} />\r\n          </em>\r\n          {statistics}\r\n        </a>\r\n        <p>Subscribers</p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Featured from '../ui/featured';\r\nimport Playlists from '../ui/playlists';\r\n\r\nimport VideoModal from '../video.modal';\r\n\r\nimport { selectVideoContext } from '../../context/selectedVideoProvider';\r\n\r\nimport Header from '../ui/header';\r\n\r\nconst BrowsePage = (props) => {\r\n  const { selectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const videoInfo =\r\n    selectedVideoId !== null &&\r\n    ReactDOM.createPortal(<VideoModal videoId={selectedVideoId} />, document.getElementById('root-video-info'));\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Featured />\r\n      <Playlists />\r\n      {videoInfo}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowsePage;\r\n","import '../../styles/footer.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faInstagram, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container__footer\">\r\n      <p>\r\n        Designed and develop by{' '}\r\n        <a href=\"https://github.com/rem029\" target=\"_blank\" rel=\"noreferrer\">\r\n          rem029\r\n        </a>\r\n      </p>\r\n\r\n      <div className=\"container__footer__icons\">\r\n        <a href=\"https://www.facebook.com/rem029vector/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faFacebook} />\r\n        </a>\r\n        <a href=\"https://www.instagram.com/rem029vector/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faInstagram} />\r\n        </a>\r\n        <a href=\"https://github.com/rem029\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport './styles/app.css';\r\n\r\nimport HomePage from './components/pages/home.page';\r\nimport NotFoundPage from './components/pages/notfound.page';\r\nimport BrowsePage from './components/pages/browse.page';\r\nimport Footer from './components/ui/footer';\r\n\r\nimport VideoModal from './components/video.modal';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router basename={'/'}>\r\n        <Switch>\r\n          <Route\r\n            path={['/browse/:videoId', '/browse']}\r\n            component={(props) => (\r\n              <React.Fragment>\r\n                {props.match.params.videoId && <VideoModal {...props} videoId={props.match.params.videoId} />}\r\n                <BrowsePage />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n\r\n          <Route path=\"/browse\">\r\n            <BrowsePage />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createContext } from 'react';\r\n\r\nimport NavBarProvider from './navBarProvider';\r\nimport SelectedVideoProvider from './selectedVideoProvider';\r\nimport ChannelProvider from './channelProvider';\r\nimport ChannelActivitiesProvider from './channelActivitiesProvider';\r\nimport PlaylistsProvider from './playlistsProvider';\r\n\r\nconst appContext = createContext();\r\n\r\nconst AppProvider = (props) => {\r\n  return (\r\n    <appContext.Provider value={props}>\r\n      <NavBarProvider>\r\n        <SelectedVideoProvider>\r\n          <ChannelProvider>\r\n            <ChannelActivitiesProvider>\r\n              <PlaylistsProvider>{props.children}</PlaylistsProvider>\r\n            </ChannelActivitiesProvider>\r\n          </ChannelProvider>\r\n        </SelectedVideoProvider>\r\n      </NavBarProvider>\r\n    </appContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport AppProvider from \"./context/appProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}