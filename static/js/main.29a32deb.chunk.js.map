{"version":3,"sources":["context/analyticsProvider.js","assets/logo/tulflix_logo-full.png","components/pages/home.page.js","components/pages/notfound.page.js","components/ui/spinner.js","components/video.player.js","hooks/useAxios.js","hooks/useYoutubeAPI.js","helpers/ytAPI.js","hooks/useDataFromYtAPI.js","context/channelProvider.js","context/channelActivitiesProvider.js","components/ui/featured.js","components/playlist.items.js","components/playlist.js","context/playlistsProvider.js","components/ui/playlists.js","assets/logo/tulflix_logo-icon.png","utils/abbreviateNum.js","components/ui/backdrop.js","context/selectedVideoProvider.js","components/video.modal.js","context/navBarProvider.js","components/navbar.link.js","components/navbar.js","components/ui/header.js","components/pages/browse.page.js","components/ui/footer.js","App.js","reportWebVitals.js","context/appProvider.js","index.js"],"names":["analyticsContext","createContext","event","analyticsProvider","props","ReactGA","initialize","process","Provider","value","action","category","children","HomePage","useState","imgLoaded","setImgLoaded","useContext","imgClass","className","src","LogoFull","alt","onLoad","to","NotFoundPage","Spinner","icon","faCircleNotch","VideoPlayer","videoID","title","allowAutoPlay","frameLoaded","setFrameLoaded","AutoPlay","e","allowFullScreen","allow","useAxios","method","url","loading","setLoading","response","setResponse","error","setError","config","useEffect","axios","then","catch","finally","type","responseSchema","results","useYoutubeAPI","key","id","maxResults","urls","channel","playlists","playlist_item","videoInfo","channelActivity","channelVideos","setResult","data","items","apiKEY","chId","ytAPI","GetChannelInfo","channelId","GetChannelActivity","GetChannelVideos","GetPlaylists","GetPlaylistItems","playlistId","GetVideoInfo","videoId","useDataFromYtAPI","state","setState","length","channelContext","setChannel","ChannelProvider","getChannel","channelActivitiesContext","channelActivities","setChannelActivities","ChannelActivitiesProvider","getChannelActivities","Featured","showVideo","Fragment","contentDetails","upload","snippet","thumbnails","high","customUrl","PlaylistItem","imgUrl","loadPlaylistItems","ytApi","Playlist","scrolled","setScrolled","playlistItems","setPlaylistItems","navButtons","setNavButtons","activeNav","setActiveNav","playListItemsRef","useRef","getPlaylistItems","window","addEventListener","onWindowResize","removeEventListener","current","updateNavButtons","Math","round","scrollWidth","innerWidth","index","arrayLength","newArray","showScrollNext","onClick","preventDefault","scrollTo","behavior","left","scrollLeft","prevPage","faChevronLeft","nextPage","faChevronRight","map","navId","console","log","goToPage","faAngleRight","ref","onScroll","target","onScrollPage","item","currentItem","medium","resourceId","playlistsContext","setPlaylists","manualPlaylists","PlaylistsProvider","getPlaylists","recentUploads","allVideos","Playlists","localized","abbreviateNumber","newValue","suffixNum","toFixed","Backdrop","ReactDOM","createPortal","document","getElementById","selectVideoContext","selectedVideoId","setSelectedVideoId","SelectedVideoProvider","VideoModal","datePublished","Date","likeCount","viewCount","description","setData","video","result","maxres","publishedAt","abbreviateNum","statistics","faTimes","toDateString","faThumbsUp","faEye","TulflixIcon","navBarContext","navBar","toggleNavBar","activePlaylist","setActivePlaylist","NavBarProvider","setNavBar","NavBarLink","href","text","isActive","navbarLinkStyle","scrollIntoView","scrollToView","NavBar","navBarStyle","navBarArrow","manualList","list","faCaretDown","faCaretUp","Header","subscriberCount","rel","faUserFriends","BrowsePage","Footer","faFacebook","faInstagram","faGithub","App","basename","path","component","match","params","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appContext","AppProvider","render","StrictMode"],"mappings":"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","file":"static/js/main.29a32deb.chunk.js","sourcesContent":["import ReactGA from \"react-ga\";\r\nimport React, { createContext } from \"react\";\r\n\r\nexport const analyticsContext = createContext({ event: ({}) => {} });\r\n\r\nconst analyticsProvider = (props) => {\r\n  ReactGA.initialize(process.env.REACT_APP_GA);\r\n\r\n  const analyticsEvent = (action, category) => {\r\n    ReactGA.event({ action: action, category: category });\r\n  };\r\n\r\n  return (\r\n    <analyticsContext.Provider value={{ event: analyticsEvent }}>\r\n      {props.children}\r\n    </analyticsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default analyticsProvider;\r\n","export default __webpack_public_path__ + \"static/media/tulflix_logo-full.49b0b67c.png\";","import { Link } from \"react-router-dom\";\r\nimport { useState, useContext } from \"react\";\r\nimport { analyticsContext } from \"../../context/analyticsProvider\";\r\n\r\nimport LogoFull from \"../../assets/logo/tulflix_logo-full.png\";\r\n\r\nimport \"../../styles/home.page.css\";\r\n\r\nconst HomePage = () => {\r\n  const [imgLoaded, setImgLoaded] = useState(false);\r\n\r\n  const analytics = useContext(analyticsContext);\r\n  analytics.event(\"visted\", \"tulflix homepage\");\r\n\r\n  const onImgLoad = () => setImgLoaded(true);\r\n\r\n  const imgClass = imgLoaded\r\n    ? \"container__homepage-img img-show\"\r\n    : \"container__homepage-img\";\r\n  return (\r\n    <div className=\"container__homepage\">\r\n      <img\r\n        className={imgClass}\r\n        src={LogoFull}\r\n        alt={LogoFull}\r\n        onLoad={() => {\r\n          onImgLoad();\r\n        }}\r\n      />\r\n      <p className=\"container__homepage-sub-text\">Watch Tulfo and chill</p>\r\n      <Link className=\"container__homepage-btn\" to=\"/browse/\">\r\n        Start Watching\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Link } from 'react-router-dom';\r\nimport { useState } from 'react/cjs/react.development';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport '../../styles/notFound.page.css';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div className=\"container__notfound\">\r\n      <img className=\"container__notfound-img\" src={LogoFull} alt={LogoFull} />\r\n      <p className=\"container__notfound-sub-text\">Page Not Found</p>\r\n      <Link className=\"container__notfound-btn\" to=\"/browse/\">\r\n        Go Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleNotch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"../../styles/spinner.css\";\r\n\r\nconst Spinner = ({ className }) => {\r\n  return (\r\n    <div className={`spinner ${className}`}>\r\n      <FontAwesomeIcon icon={faCircleNotch} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import { useState } from 'react';\r\nimport '../styles/video.player.css';\r\n\r\nimport Spinner from './ui/spinner';\r\n\r\nconst VideoPlayer = ({ videoID, title, allowAutoPlay = false }) => {\r\n  const [frameLoaded, setFrameLoaded] = useState(false);\r\n\r\n  const onFrameLoad = (e) => {\r\n    setFrameLoaded(true);\r\n  };\r\n\r\n  const AutoPlay = allowAutoPlay ? '?autoplay=1&mute=1' : '';\r\n\r\n  return (\r\n    <div className=\"container__videoplayer\">\r\n      <iframe\r\n        onLoad={(e) => {\r\n          // console.log(e);\r\n          onFrameLoad(e);\r\n        }}\r\n        className=\"iframe-responsive\"\r\n        src={`https://www.youtube.com/embed/${videoID}${AutoPlay}`}\r\n        allowFullScreen\r\n        title={title}\r\n        allow=\"autoplay\"\r\n      />\r\n      <div className=\"container__loading\">{!frameLoaded && <Spinner className=\"spinner-lg\" />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxios = (method, url) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [response, setResponse] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const config = { method: method, url: url };\r\n\r\n  const fetchData = () => {\r\n    axios(config)\r\n      .then((response) => setResponse(response))\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { loading, response, error };\r\n};\r\n\r\nexport default useAxios;\r\n","import { useEffect, useState } from \"react\";\r\nimport useAxios from \"./useAxios\";\r\n\r\nexport const type = {\r\n  channel: \"channel\",\r\n  playlists: \"playlists\",\r\n  playlist_item: \"playlist_item\",\r\n  videoInfo: \"videoInfo\",\r\n  channelActivity: \"channelActivity\",\r\n  channelVideos: \"channelVideos\",\r\n};\r\n\r\nexport const responseSchema = {\r\n  loading: true,\r\n  results: [],\r\n  error: null,\r\n};\r\n\r\nconst useYoutubeAPI = (\r\n  type,\r\n  key,\r\n  id = \"0\",\r\n  maxResults = 50,\r\n  pageToken = \"\"\r\n) => {\r\n  const urls = {\r\n    channel: `https://youtube.googleapis.com/youtube/v3/channels?part=snippet&part=statistics&part=contentDetails&part=topicDetails&id=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlists: `https://youtube.googleapis.com/youtube/v3/playlists?part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    playlist_item: ` https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&part=id&part=contentDetails&part=status&playlistId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    videoInfo: `https://youtube.googleapis.com/youtube/v3/videos?id=${id}&part=snippet&part=statistics&maxResults=${maxResults}&key=${key}`,\r\n    channelActivity: `https://youtube.googleapis.com/youtube/v3/activities?part=contentDetails&part=snippet&channelId=${id}&maxResults=${maxResults}&key=${key}`,\r\n    channelVideos: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&channelId=${id}&maxResults=${maxResults}&order=date&type=video&key=${key}`,\r\n  };\r\n\r\n  const [results, setResult] = useState([]);\r\n  const { loading, error, response } = useAxios(\"get\", urls[type]);\r\n\r\n  useEffect(() => {\r\n    if (response || error) {\r\n      if (error) {\r\n        setResult(error);\r\n      } else {\r\n        setResult(response.data.items);\r\n      }\r\n    }\r\n  }, [response, error]);\r\n\r\n  return { loading, error, results };\r\n};\r\n\r\nexport default useYoutubeAPI;\r\n","import useYoutubeAPI, { type } from \"../hooks/useYoutubeAPI\";\r\n\r\nconst apiKEY = process.env.REACT_APP_KEY;\r\nconst chId = \"UCxhygwqQ1ZMoBGQM2yEcNug\"; //TULFO CHANNEL ID\r\n\r\nconst ytAPI = {\r\n  GetChannelInfo: (channelId = chId) =>\r\n    useYoutubeAPI(type.channel, apiKEY, channelId),\r\n\r\n  GetChannelActivity: (channelId = chId) =>\r\n    useYoutubeAPI(type.channelActivity, apiKEY, channelId),\r\n\r\n  GetChannelVideos: (channelId = chId) =>\r\n    useYoutubeAPI(type.channelVideos, apiKEY, channelId),\r\n\r\n  GetPlaylists: (channelId = chId) =>\r\n    useYoutubeAPI(type.playlists, apiKEY, channelId),\r\n\r\n  GetPlaylistItems: (playlistId) =>\r\n    useYoutubeAPI(type.playlist_item, apiKEY, playlistId),\r\n\r\n  GetVideoInfo: (videoId) => useYoutubeAPI(type.videoInfo, apiKEY, videoId),\r\n};\r\n\r\nexport default ytAPI;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { responseSchema } from \"./useYoutubeAPI\";\r\n\r\nconst useDataFromYtAPI = (data, state, setState) => {\r\n  useEffect(() => {\r\n    const loaded = state.results.length === 0 && state.loading;\r\n    if (loaded) {\r\n      if ((!data.loading && data.results.length > 0) || data.error) {\r\n        let response = responseSchema;\r\n        response = { ...data };\r\n        setState(response);\r\n      }\r\n    }\r\n  }, [data, state, setState]);\r\n};\r\n\r\nexport default useDataFromYtAPI;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const channelContext = createContext({\r\n  channel: responseSchema,\r\n  setChannel: () => {},\r\n});\r\n\r\nconst ChannelProvider = (props) => {\r\n  const [channel, setChannel] = useState(responseSchema);\r\n\r\n  const getChannel = ytAPI.GetChannelInfo();\r\n  const updateChannel = (state) => setChannel(state);\r\n  useDataFromYtAPI(getChannel, channel, updateChannel);\r\n\r\n  return (\r\n    <channelContext.Provider\r\n      value={{\r\n        channel: channel,\r\n        setChannel: setChannel,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </channelContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChannelProvider;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const channelActivitiesContext = createContext({\r\n  channelActivities: responseSchema,\r\n  setChannelActivities: () => {},\r\n});\r\n\r\nconst ChannelActivitiesProvider = (props) => {\r\n  const [channelActivities, setChannelActivities] = useState(responseSchema);\r\n\r\n  const getChannelActivities = ytAPI.GetChannelActivity();\r\n  const updateChannelActivities = (state) => setChannelActivities(state);\r\n  useDataFromYtAPI(getChannelActivities, channelActivities, updateChannelActivities);\r\n  return (\r\n    <channelActivitiesContext.Provider\r\n      value={{\r\n        channelActivities: channelActivities,\r\n        setChannelActivities: setChannelActivities,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </channelActivitiesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ChannelActivitiesProvider;\r\n","import React, { useContext } from 'react';\r\n\r\nimport Spinner from '../ui/spinner';\r\n\r\nimport '../../styles/featured.css';\r\n\r\nimport VideoPlayer from '../video.player';\r\n\r\nimport { channelContext } from '../../context/channelProvider';\r\nimport { channelActivitiesContext } from '../../context/channelActivitiesProvider';\r\n\r\nconst Featured = () => {\r\n  const { channel } = useContext(channelContext);\r\n  const { channelActivities } = useContext(channelActivitiesContext);\r\n\r\n  const showVideo = !channelActivities.loading && channelActivities.results.length > 0;\r\n\r\n  return (\r\n    <div className=\"container__featured\">\r\n      <React.Fragment>\r\n        {!channel.loading ? (\r\n          showVideo ? (\r\n            <div className=\"container__featured__video\">\r\n              <VideoPlayer\r\n                videoID={channelActivities.results[0].contentDetails.upload.videoId}\r\n                title={channelActivities.results[0].snippet.title}\r\n                allowAutoPlay={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"container__featured__image\">\r\n              <img src={channel.results[0].snippet.thumbnails.high.url} alt={channel.results[0].snippet.customUrl} />\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className=\"container__featured__loading\">\r\n            <Spinner className=\"spinner-lg\" />\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/playlistitem.css';\r\n\r\nconst PlaylistItem = ({ videoID, imgUrl }) => {\r\n  if (!videoID || !imgUrl) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container__playlistitem\">\r\n      <Link to={`/browse/${videoID}`}>\r\n        <img src={imgUrl} alt={videoID} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaylistItem;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight, faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport PlaylistItem from './playlist.items';\r\n\r\nimport ytApi from '../helpers/ytAPI.js';\r\n\r\nimport '../styles/playlist.css';\r\n\r\nconst Playlist = ({ title, playlistId, items = [] }) => {\r\n  const [scrolled, setScrolled] = useState(false);\r\n  const [playlistItems, setPlaylistItems] = useState(items);\r\n  const [navButtons, setNavButtons] = useState([]);\r\n  const [activeNav, setActiveNav] = useState(-1);\r\n\r\n  const playListItemsRef = useRef(null);\r\n  const getPlaylistItems = loadPlaylistItems(playlistId, items);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', onWindowResize);\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (playListItemsRef) {\r\n      onWindowResize();\r\n    }\r\n  }, [playListItemsRef]);\r\n\r\n  useEffect(() => {}, [navButtons]);\r\n\r\n  useEffect(() => {\r\n    if (!getPlaylistItems.loading && playlistItems.length === 0) {\r\n      setPlaylistItems(getPlaylistItems.results);\r\n      // contextApp.addToPlaylistItems([...getPlaylistItems.results]);\r\n    }\r\n  }, [playlistItems, items, getPlaylistItems]);\r\n\r\n  const nextPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: window.innerWidth + playListItemsRef.current.scrollLeft,\r\n    });\r\n  };\r\n\r\n  const prevPage = (e) => {\r\n    e.preventDefault();\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: playListItemsRef.current.scrollLeft - window.innerWidth,\r\n    });\r\n  };\r\n\r\n  const goToPage = (e, index) => {\r\n    e.preventDefault();\r\n    setActiveNav(index);\r\n    playListItemsRef.current.scrollTo({\r\n      behavior: 'smooth',\r\n      left: window.innerWidth * index,\r\n    });\r\n\r\n    console.log('SCROLL TO', window.innerWidth * index);\r\n    console.log('SCROLL WIDTH', playListItemsRef.current.scrollWidth);\r\n  };\r\n\r\n  const onScrollPage = (e) => setScrolled(e.target.scrollLeft > 0);\r\n\r\n  const onWindowResize = () => {\r\n    if (playListItemsRef) {\r\n      if (playListItemsRef.current) {\r\n        updateNavButtons(Math.round(playListItemsRef.current.scrollWidth / window.innerWidth));\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateNavButtons = (arrayLength = 0) => {\r\n    if (arrayLength === 1) {\r\n      arrayLength = 0;\r\n    }\r\n    let index;\r\n    let newArray = [arrayLength - 1];\r\n    if (arrayLength > 0) {\r\n      for (index = 0; index <= arrayLength; index++) {\r\n        const id = index;\r\n        newArray[index] = id;\r\n      }\r\n      setNavButtons(newArray);\r\n    }\r\n  };\r\n\r\n  let showScrollNext = true;\r\n\r\n  try {\r\n    showScrollNext = playListItemsRef.current.scrollWidth > window.innerWidth;\r\n  } catch {\r\n    showScrollNext = true;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container_playlist\">\r\n      {scrolled && (\r\n        <button onClick={(e) => prevPage(e)} className=\"container__playlist__control control-left\">\r\n          <FontAwesomeIcon icon={faChevronLeft} />\r\n        </button>\r\n      )}\r\n\r\n      {showScrollNext && (\r\n        <button onClick={(e) => nextPage(e)} className=\"container__playlist__control control-right\">\r\n          <FontAwesomeIcon icon={faChevronRight} />\r\n        </button>\r\n      )}\r\n\r\n      {\r\n        <div className=\"container__playlist-nav-buttons\">\r\n          {navButtons.length > 0 &&\r\n            navButtons.map((navId) => {\r\n              return (\r\n                <button\r\n                  key={navId}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    goToPage(e, navId);\r\n                  }}\r\n                  className={activeNav === navId ? 'container__playlist-nav-buttons-active' : ''}\r\n                ></button>\r\n              );\r\n            })}\r\n        </div>\r\n      }\r\n\r\n      <div className=\"container_playlist-title\">\r\n        <h2>{title}</h2>\r\n        <div className=\"container_playlist-title__sub-text\">Explore all</div>\r\n        <div className=\"container_playlist-title__sub-icon\">\r\n          <FontAwesomeIcon icon={faAngleRight} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={'container_playlist-items ' + (!playListItemsRef && ' playlist-loading')}\r\n        id={`#${playlistId}`}\r\n        ref={playListItemsRef}\r\n        onScroll={(e) => {\r\n          onScrollPage(e);\r\n        }}\r\n      >\r\n        <React.Fragment>\r\n          {playlistItems.map((item, index) => {\r\n            let currentItem;\r\n\r\n            /* DONT RENDER PRIVATE AND DELETED VIDEO */\r\n            try {\r\n              currentItem =\r\n                items.length > 0 ? (\r\n                  <PlaylistItem\r\n                    key={item.contentDetails.upload.videoId + index}\r\n                    videoID={item.contentDetails.upload.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                ) : (\r\n                  <PlaylistItem\r\n                    key={item.snippet.resourceId.videoId + index}\r\n                    videoID={item.snippet.resourceId.videoId}\r\n                    imgUrl={item.snippet.thumbnails.medium.url}\r\n                    title={item.snippet.title}\r\n                  />\r\n                );\r\n            } catch {\r\n              currentItem = null;\r\n            }\r\n\r\n            return currentItem;\r\n          })}\r\n        </React.Fragment>\r\n\r\n        <PlaylistItem />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst loadPlaylistItems = (playlistId, items) => {\r\n  if (items.length > 0) {\r\n    return { loading: false, results: items, error: null };\r\n  } else {\r\n    return ytApi.GetPlaylistItems(playlistId);\r\n  }\r\n};\r\n\r\nexport default Playlist;\r\n","import { createContext, useState } from 'react';\r\n\r\nimport ytAPI from '../helpers/ytAPI';\r\nimport useDataFromYtAPI from '../hooks/useDataFromYtAPI';\r\nimport { responseSchema } from '../hooks/useYoutubeAPI';\r\n\r\nexport const playlistsContext = createContext({\r\n  playlists: responseSchema,\r\n  setPlaylists: () => {},\r\n  manualPlaylists: {},\r\n});\r\n\r\nconst PlaylistsProvider = (props) => {\r\n  const [playlists, setPlaylists] = useState(responseSchema);\r\n\r\n  const getPlaylists = ytAPI.GetPlaylists();\r\n  const updatePlaylists = (state) => setPlaylists(state);\r\n  useDataFromYtAPI(getPlaylists, playlists, updatePlaylists);\r\n\r\n  return (\r\n    <playlistsContext.Provider\r\n      value={{\r\n        playlists: playlists,\r\n        setPlaylists: setPlaylists,\r\n        manualPlaylists: {\r\n          recentUploads: {\r\n            id: 'recentUploads01',\r\n            title: 'RECENT UPLOADS',\r\n          },\r\n          allVideos: {\r\n            id: 'allVideos02',\r\n            title: 'ALL VIDEOS',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      {props.children}\r\n    </playlistsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PlaylistsProvider;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Playlist from \"../playlist\";\r\nimport Spinner from \"../ui/spinner\";\r\n\r\nimport { playlistsContext } from \"../../context/playlistsProvider\";\r\nimport { channelActivitiesContext } from \"../../context/channelActivitiesProvider\";\r\n\r\nimport \"../../styles/playlists.css\";\r\n\r\nconst Playlists = () => {\r\n  const { playlists, manualPlaylists } = useContext(playlistsContext);\r\n  const { channelActivities } = useContext(channelActivitiesContext);\r\n\r\n  return (\r\n    <div className=\"container__playlists\">\r\n      {!channelActivities.loading && channelActivities.results.length > 0 ? (\r\n        <React.Fragment>\r\n          <Playlist\r\n            title={manualPlaylists.recentUploads.title}\r\n            playlistId={manualPlaylists.recentUploads.id}\r\n            items={channelActivities.results}\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className=\"container__playlists_loading\">\r\n          <Spinner className=\"spinner-lg\" />\r\n        </div>\r\n      )}\r\n\r\n      {!playlists.loading && playlists.results.length > 0 ? (\r\n        <React.Fragment>\r\n          {playlists.results.map((item) => {\r\n            return (\r\n              <Playlist\r\n                key={item.id}\r\n                title={item.snippet.localized.title}\r\n                playlistId={item.id}\r\n              />\r\n            );\r\n          })}\r\n        </React.Fragment>\r\n      ) : (\r\n        <div className=\"container__playlists_loading\">\r\n          <Spinner className=\"spinner-lg\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlists;\r\n","export default __webpack_public_path__ + \"static/media/tulflix_logo-icon.93cc8c92.png\";","export default function abbreviateNumber(value) {\r\n  let newValue = value;\r\n  try {\r\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\r\n    let suffixNum = 0;\r\n    while (newValue >= 1000) {\r\n      newValue /= 1000;\r\n      suffixNum++;\r\n    }\r\n\r\n    if (suffixNum > 0) {\r\n      newValue = newValue.toFixed(1);\r\n    }\r\n\r\n    newValue += suffixes[suffixNum];\r\n    return newValue;\r\n  } catch {\r\n    console.log(\"error\", newValue);\r\n    return value;\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport '../../styles/backdrop.css';\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        props.onClick();\r\n      }}\r\n      className=\"container__backdrop\"\r\n    >\r\n      {props.children}\r\n    </div>,\r\n    document.getElementById('root-video-info')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const selectVideoContext = createContext({\r\n  selectedVideoId: null,\r\n  setSelectedVideoId: () => {},\r\n});\r\n\r\nconst SelectedVideoProvider = (props) => {\r\n  const [selectedVideoId, setSelectedVideoId] = useState(null);\r\n\r\n  return (\r\n    <selectVideoContext.Provider\r\n      value={{\r\n        selectedVideoId: selectedVideoId,\r\n        setSelectedVideoId: setSelectedVideoId,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </selectVideoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SelectedVideoProvider;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faThumbsUp, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport TulflixIcon from '../assets/logo/tulflix_logo-icon.png';\r\n\r\nimport abbreviateNum from '../utils/abbreviateNum';\r\n\r\nimport Backdrop from './ui/backdrop';\r\nimport Spinner from './ui/spinner';\r\nimport VideoPlayer from './video.player';\r\n\r\nimport '../styles/video.modal.css';\r\nimport ytAPI from '../helpers/ytAPI';\r\n\r\nimport { selectVideoContext } from '../context/selectedVideoProvider';\r\n\r\nconst VideoModal = ({ videoId }) => {\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    title: '',\r\n    imgUrl: '',\r\n    datePublished: new Date(),\r\n    likeCount: '',\r\n    viewCount: '',\r\n    description: '',\r\n  });\r\n\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const video = ytAPI.GetVideoInfo(videoId);\r\n\r\n  useEffect(() => {\r\n    setSelectedVideoId(videoId);\r\n    return () => {\r\n      setSelectedVideoId(null);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!video.loading && video.result !== null && video.error === null && data.id === '') {\r\n      setData({\r\n        id: video.results[0].id,\r\n        title: video.results[0].snippet.title,\r\n        imgUrl: video.results[0].snippet.thumbnails.maxres.url,\r\n        datePublished: new Date(video.results[0].snippet.publishedAt),\r\n        likeCount: abbreviateNum(video.results[0].statistics.likeCount),\r\n        viewCount: abbreviateNum(video.results[0].statistics.viewCount),\r\n        description: video.results[0].snippet.description,\r\n      });\r\n    }\r\n  }, [video, data]);\r\n\r\n  return (\r\n    <Backdrop onClick={() => {}}>\r\n      <div className=\"container__video-modal\">\r\n        <div className=\"container__video-modal__close-btn\">\r\n          <Link to=\"/browse\">\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </Link>\r\n        </div>\r\n        <div className=\"container__video-modal__info\">\r\n          <div className=\"info-img\">\r\n            <div className=\"info-img-overlay\">\r\n              <VideoPlayer videoID={data.id} title={data.title} />\r\n            </div>\r\n            <img src={data.imgUrl} alt={data.title} />\r\n          </div>\r\n\r\n          {video.loading ? (\r\n            <Spinner className={'spinner-lg'} />\r\n          ) : (\r\n            <div className=\"info-text\">\r\n              <div className=\"info-text-date\">\r\n                <p>{data.datePublished.toDateString()}</p>\r\n\r\n                <div className=\"info-text-statistics statistics-likes\">\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faThumbsUp} />\r\n                  </p>\r\n                  <p>{data.likeCount}</p>\r\n                </div>\r\n\r\n                <div className=\"info-text-statistics statistics-views\">\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faEye} />\r\n                  </p>\r\n                  <p>{data.viewCount}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"info-text-t-series\">\r\n                <img src={TulflixIcon} alt={TulflixIcon} />\r\n                <h2>SERIES</h2>\r\n              </div>\r\n              <h2>{data.title}</h2>\r\n\r\n              <hr className=\"line__grey\" />\r\n              <hr className=\"line__red\" />\r\n\r\n              <pre className=\"info-desc\">{data.description}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default VideoModal;\r\n","import { createContext, useState } from 'react';\r\n\r\nexport const navBarContext = createContext({\r\n  navBar: false,\r\n  toggleNavBar: () => {},\r\n  activePlaylist: null,\r\n  setActivePlaylist: () => {},\r\n});\r\n\r\nconst NavBarProvider = (props) => {\r\n  const [navBar, setNavBar] = useState(false);\r\n  const [activePlaylist, setActivePlaylist] = useState(null);\r\n\r\n  const toggleNavBar = () => setNavBar((state) => !state);\r\n\r\n  return (\r\n    <navBarContext.Provider\r\n      value={{\r\n        navBar: navBar,\r\n        toggleNavBar: toggleNavBar,\r\n        activePlaylist: activePlaylist,\r\n        setActivePlaylist: setActivePlaylist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </navBarContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NavBarProvider;\r\n","import { useContext } from \"react\";\r\nimport \"../styles/navbar.link.css\";\r\n\r\nimport { navBarContext } from \"../context/navBarProvider\";\r\nimport { selectVideoContext } from \"../context/selectedVideoProvider\";\r\n\r\nconst NavBarLink = ({ playlistId, href, text, isActive }) => {\r\n  const { toggleNavBar } = useContext(navBarContext);\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const navbarLinkStyle = isActive\r\n    ? \"navbar-link navbar-link-active\"\r\n    : \"navbar-link\";\r\n  const scrollToView = (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(`#${playlistId}`).scrollIntoView();\r\n  };\r\n  return (\r\n    <li className={navbarLinkStyle}>\r\n      <a\r\n        href={href}\r\n        onClick={(e) => {\r\n          scrollToView(e);\r\n          setSelectedVideoId(null);\r\n          toggleNavBar();\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavBarLink;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport NavBarLink from \"../components/navbar.link\";\r\n\r\nimport { navBarContext } from \"../context/navBarProvider\";\r\nimport { playlistsContext } from \"../context/playlistsProvider\";\r\nimport { selectVideoContext } from \"../context/selectedVideoProvider\";\r\n\r\nimport \"../styles/navbar.css\";\r\nimport Spinner from \"./ui/spinner\";\r\n\r\nconst NavBar = () => {\r\n  const { navBar, toggleNavBar, activePlaylist } = useContext(navBarContext);\r\n  const { playlists, manualPlaylists } = useContext(playlistsContext);\r\n  const { setSelectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const navBarStyle = navBar ? \"navbar navbar-open\" : \"navbar\";\r\n  const navBarArrow = navBar\r\n    ? \"container__navbar__arrow arrow-up\"\r\n    : \"container__navbar__arrow\";\r\n\r\n  /* LOAD PLAYLIST */\r\n  /* MANUAL PLAYLIST */\r\n  const manualList = [\r\n    <NavBarLink\r\n      key={manualPlaylists.recentUploads.id + \"navbar\"}\r\n      playlistId={manualPlaylists.recentUploads.id}\r\n      href=\"src\"\r\n      text={manualPlaylists.recentUploads.title}\r\n      isActive={manualPlaylists.recentUploads.id === activePlaylist}\r\n    />,\r\n  ];\r\n\r\n  /* LOAD PLAYLIST */\r\n  /* YOUTUBE PLAYLIST */\r\n  const list = !playlists.loading ? (\r\n    playlists.results.map((item) => {\r\n      return (\r\n        <NavBarLink\r\n          key={item.id}\r\n          playlistId={item.id}\r\n          href=\"src\"\r\n          text={item.snippet.title}\r\n          isActive={item.id === activePlaylist}\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    <Spinner className=\"spinner-sm\" />\r\n  );\r\n\r\n  return (\r\n    <div className=\"container__navbar\">\r\n      <button\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          toggleNavBar();\r\n          setSelectedVideoId(null);\r\n        }}\r\n      >\r\n        Browse\r\n        <div className={navBarArrow}>\r\n          <FontAwesomeIcon icon={faCaretDown} />\r\n        </div>\r\n      </button>\r\n\r\n      <div className={navBarStyle}>\r\n        <em>\r\n          <FontAwesomeIcon icon={faCaretUp} />\r\n        </em>\r\n        <nav>\r\n          <ul>\r\n            {manualList}\r\n            {list}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport LogoFull from '../../assets/logo/tulflix_logo-full.png';\r\n\r\nimport NavBar from '../navbar';\r\nimport Spinner from '../ui/spinner';\r\nimport abbreviateNumber from '../../utils/abbreviateNum';\r\n\r\nimport { channelContext } from '../../context/channelProvider';\r\n\r\nimport '../../styles/header.css';\r\nimport '../../styles/logo.css';\r\n\r\nconst Header = () => {\r\n  const { channel } = useContext(channelContext);\r\n\r\n  const statistics = !channel.loading ? (\r\n    <p>{abbreviateNumber(channel.results[0].statistics.subscriberCount)}</p>\r\n  ) : (\r\n    <Spinner className=\"spinner-sm\" />\r\n  );\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header__item_left\">\r\n        <img className=\"logo-full\" src={LogoFull} alt=\"tulflix_logo-full.png\" />\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"header__item_right\">\r\n        <a href=\"https://www.youtube.com/channel/UCxhygwqQ1ZMoBGQM2yEcNug\" target=\"_blank\" rel=\"noreferrer\">\r\n          <em>\r\n            <FontAwesomeIcon icon={faUserFriends} />\r\n          </em>\r\n          {statistics}\r\n        </a>\r\n        <p>Subscribers</p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Featured from \"../ui/featured\";\r\nimport Playlists from \"../ui/playlists\";\r\n\r\nimport VideoModal from \"../video.modal\";\r\n\r\nimport { selectVideoContext } from \"../../context/selectedVideoProvider\";\r\nimport { analyticsContext } from \"../../context/analyticsProvider\";\r\n\r\nimport Header from \"../ui/header\";\r\n\r\nconst BrowsePage = (props) => {\r\n  const { selectedVideoId } = useContext(selectVideoContext);\r\n\r\n  const analytics = useContext(analyticsContext);\r\n  analytics.event(\"visted\", \"tulflix homepage\");\r\n\r\n  const videoInfo =\r\n    selectedVideoId !== null &&\r\n    ReactDOM.createPortal(\r\n      <VideoModal videoId={selectedVideoId} />,\r\n      document.getElementById(\"root-video-info\")\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Featured />\r\n      <Playlists />\r\n      {videoInfo}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowsePage;\r\n","import '../../styles/footer.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook, faInstagram, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"container__footer\">\r\n      <p>\r\n        Designed and develop by{' '}\r\n        <a href=\"https://github.com/rem029\" target=\"_blank\" rel=\"noreferrer\">\r\n          rem029\r\n        </a>\r\n      </p>\r\n\r\n      <div className=\"container__footer__icons\">\r\n        <a href=\"https://www.facebook.com/rem029vector/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faFacebook} />\r\n        </a>\r\n        <a href=\"https://www.instagram.com/rem029vector/\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faInstagram} />\r\n        </a>\r\n        <a href=\"https://github.com/rem029\" target=\"_blank\" rel=\"noreferrer\">\r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport \"./styles/app.css\";\r\n\r\nimport HomePage from \"./components/pages/home.page\";\r\nimport NotFoundPage from \"./components/pages/notfound.page\";\r\nimport BrowsePage from \"./components/pages/browse.page\";\r\nimport Footer from \"./components/ui/footer\";\r\n\r\nimport VideoModal from \"./components/video.modal\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router basename={\"/\"}>\r\n        <Switch>\r\n          <Route\r\n            path={[\"/browse/:videoId\", \"/browse\"]}\r\n            component={(props) => (\r\n              <React.Fragment>\r\n                {props.match.params.videoId && (\r\n                  <VideoModal {...props} videoId={props.match.params.videoId} />\r\n                )}\r\n                <BrowsePage />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n\r\n          <Route path=\"/browse\">\r\n            <BrowsePage />\r\n          </Route>\r\n\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createContext } from \"react\";\r\n\r\nimport AnalyticsProvider from \"./analyticsProvider\";\r\nimport NavBarProvider from \"./navBarProvider\";\r\nimport SelectedVideoProvider from \"./selectedVideoProvider\";\r\nimport ChannelProvider from \"./channelProvider\";\r\nimport ChannelActivitiesProvider from \"./channelActivitiesProvider\";\r\nimport PlaylistsProvider from \"./playlistsProvider\";\r\n\r\nconst appContext = createContext();\r\n\r\nconst AppProvider = (props) => {\r\n  return (\r\n    <appContext.Provider value={props}>\r\n      <AnalyticsProvider>\r\n        <NavBarProvider>\r\n          <SelectedVideoProvider>\r\n            <ChannelProvider>\r\n              <ChannelActivitiesProvider>\r\n                <PlaylistsProvider>{props.children}</PlaylistsProvider>\r\n              </ChannelActivitiesProvider>\r\n            </ChannelProvider>\r\n          </SelectedVideoProvider>\r\n        </NavBarProvider>\r\n      </AnalyticsProvider>\r\n    </appContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport AppProvider from \"./context/appProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}